
##################
### G-Code Macros
##################

[gcode_macro QUERY_ADXL]
gcode:
  ACCELEROMETER_QUERY

[gcode_macro TEST_X_ADXL]
gcode:
  TEST_RESONANCES AXIS=X

[gcode_macro TEST_Y_ADXL]
gcode:
  TEST_RESONANCES AXIS=Y

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    G28
    ATTACH_PROBE
    NOZZLE_BRUSH
    BASE_CALIBRATE_Z
    DOCK_PROBE

[gcode_macro PARKFRONT]
gcode:
    G28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/3} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT


# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    G28                               ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/3} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER


[gcode_macro AUTO_BED_MESH]
gcode:
    G28
    Attach_Probe
    BED_MESH_CALIBRATE
    #G1 Y0 F20000
    Dock_Probe

[gcode_macro M600] 
description: Run these steps when Colour Change triggered
gcode: 
  SAVE_GCODE_STATE NAME=M600_state 
  PAUSE 
  UNLOAD_FILAMENT 
  M300 P3000
  RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro NOZZLE_BRUSH]
gcode:
    G90
    G1 Z20 F3000 # raise z to clear brush
    G1 X30 Y235 F6000 #starting coordinates of brush
    G1 Z7 F3000  #z height of scrub
    G1 X65 F10000 # end location of scrub
    G1 X30 F10000
    G1 X65 F10000
    G1 X30 F10000
    G1 X85 F10000 #final swipe and clear
    G1 Z20 F3000  #raise z to clear

#####################################################################
# Print stuff
#####################################################################
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bed_temp = params.BED_TEMP|default(50) %}
    {% set hotend_temp = params.EXTRUDER_TEMP|default(200) %}
    {% set z_adjust = params.Z_ADJUST|default(0.0)|float %}

    # Start bed heating
    M117 Heating bed
    M140 S{bed_temp}
    # Start nozzle heating
    M117 Heating nozzle
    M104 S100
    G28                                                                                  ; home all axes
    G90                                                                                  ; absolute positioning
    BED_MESH_CLEAR                                                                       ; clear bed mesh
    ATTACH_PROBE_LOCK                                                                    ; attach klicky + lock
    G28 Z                                                                                ; home z
    G90                                                                                  ; absolute positioning
    G0 Z30                                                                               ; hop up to prevent knocking probe off after homing Z
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500  ; move to center of bed to prevent knocking probe off after homing Z (otherwise QGL just moves our Z hop down again before traveling)
    M190 S{bed_temp}
    BED_MESH_CALIBRATE
    G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
    G28 Z                                                                                ; home z again
    G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
    DOCK_PROBE_UNLOCK
    CALIBRATE_Z
    SET_GCODE_OFFSET Z_ADJUST={z_adjust} MOVE=1
    M109 S{hotend_temp}                                                                  ; set & wait for hotend final temp
    G92 E0                                                                               ; reset Extruder
    G1 X0.1 Y20 Z0.3 F3000.0                                                             ; move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15                                                      ; draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0                                                                               ; reset Extruder
    G1 X4 Z2.0 F3000    

[gcode_macro PRINT_END]
description: Do things when print ends
gcode:
    # Move nozzle away from print while retracting
    G91
    # Raise nozzle and retract
    G1 E-2 F1800
    G1 Z15 F3000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move to absolute position
    G90
    G0 X20 Y230 F2000
    # Disable steppers
    M84
    # Wait for bed and nozzle to drop temperature
    # M190 S40
    # M109 S50
    M117 Print complete
    # POWER_OFF_PRINTER
    UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=120

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

####### FILAMENT LOADING ########
[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   ; set extruder to relative
    G1 E10 F600                           ; extrude a little to soften tip 
    G1 E-50 F1800                         ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E90 F600
    RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro HOT_UNLOAD_FILAMENT]
gcode:
    # Parameters
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200) %}
    
    M104 S{extruder_temp}
    PARKFRONT
    M109 S{extruder_temp}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD_FILAMENT]
gcode:
    # Parameters
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200) %}
    
    M104 S{extruder_temp}
    PARKFRONT
    M109 S{extruder_temp}
    LOAD_FILAMENT

####### Printer Power #########
[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="homeassistant_ender3",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[gcode_macro POWER_ON_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="homeassistant_ender3",
                             state="on")}
  FIRMWARE_RESTART